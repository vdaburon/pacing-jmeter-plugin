<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">4</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables out V_PACING_ITER" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="V_PACING_ITER" elementType="Argument">
              <stringProp name="Argument.name">V_PACING_ITER</stringProp>
              <stringProp name="Argument.value">5000</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller include duration timer and pacing" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <io.github.vdaburon.jmeterplugins.pacing.PacingStart guiclass="io.github.vdaburon.jmeterplugins.pacing.gui.PacingStartGui" testclass="io.github.vdaburon.jmeterplugins.pacing.PacingStart" testname="Pacing Start out V_START_PACING" enabled="true">
            <stringProp name="PacingStart.variableName">V_START_PACING</stringProp>
          </io.github.vdaburon.jmeterplugins.pacing.PacingStart>
          <hashTree/>
          <kg.apc.jmeter.samplers.DummySampler guiclass="kg.apc.jmeter.samplers.DummySamplerGui" testclass="kg.apc.jmeter.samplers.DummySampler" testname="jp@gc - Dummy Sampler wait Random(2000,4000) ms" enabled="true">
            <boolProp name="WAITING">true</boolProp>
            <boolProp name="SUCCESFULL">true</boolProp>
            <stringProp name="RESPONSE_CODE">200</stringProp>
            <stringProp name="RESPONSE_MESSAGE">OK</stringProp>
            <stringProp name="REQUEST_DATA">Dummy Sampler used to simulate requests and responses
without actual network activity. This helps debugging tests.</stringProp>
            <stringProp name="RESPONSE_DATA">${__groovy(Long.parseLong(vars.get(&quot;V_PACING_ITER&quot;))+org.apache.commons.lang3.RandomUtils.nextInt(1000\,3000))}</stringProp>
            <stringProp name="RESPONSE_TIME">${__Random(2000,4000)}</stringProp>
            <stringProp name="LATENCY">${__Random(1,50)}</stringProp>
            <stringProp name="CONNECT">${__Random(1,5)}</stringProp>
            <stringProp name="URL"></stringProp>
            <stringProp name="RESULT_CLASS">org.apache.jmeter.samplers.SampleResult</stringProp>
            <stringProp name="TestPlan.comments">Use Response Data to test the groovy code</stringProp>
          </kg.apc.jmeter.samplers.DummySampler>
          <hashTree/>
          <io.github.vdaburon.jmeterplugins.pacing.PacingPause guiclass="io.github.vdaburon.jmeterplugins.pacing.gui.PacingPauseGui" testclass="io.github.vdaburon.jmeterplugins.pacing.PacingPause" testname="Pacing Pause RIP 5sec + Random 1sec to 3sec" enabled="false">
            <stringProp name="PacingPause.variableName">V_START_PACING</stringProp>
            <stringProp name="PacingPause.duration">${__groovy(5000 + org.apache.commons.lang3.RandomUtils.nextInt(1000\,3000))}</stringProp>
            <stringProp name="TestPlan.comments">5sec + Random 1sec to 3sec</stringProp>
          </io.github.vdaburon.jmeterplugins.pacing.PacingPause>
          <hashTree/>
          <io.github.vdaburon.jmeterplugins.pacing.PacingPause guiclass="io.github.vdaburon.jmeterplugins.pacing.gui.PacingPauseGui" testclass="io.github.vdaburon.jmeterplugins.pacing.PacingPause" testname="Pacing Pause RIP in V_PACING_ITER" enabled="true">
            <stringProp name="PacingPause.variableName">V_START_PACING</stringProp>
            <stringProp name="PacingPause.duration">${__groovy(Long.parseLong(vars.get(&quot;V_PACING_ITER&quot;))+org.apache.commons.lang3.RandomUtils.nextInt(1000\,3000))}</stringProp>
            <stringProp name="TestPlan.comments">5sec + Random 1sec to 3sec</stringProp>
          </io.github.vdaburon.jmeterplugins.pacing.PacingPause>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
